{
  "uid" : "729995bcc6ba083b",
  "name" : "test_theme[test_input0]",
  "fullName" : "TestCase.test_systembase.TestSystemBase#test_theme",
  "historyId" : "79f5bce7cda40247e27d83dd62b2da45",
  "time" : {
    "start" : 1601437861563,
    "stop" : 1601437967365,
    "duration" : 105802
  },
  "description" : "主题样式",
  "descriptionHtml" : "<p>主题样式</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <TestCase.test_systembase.TestSystemBase object at 0x0000027E63DBEB88>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"65555807418bbad2a4205108f32b6122\")>\ntest_input = {'expected': '基本', 'loadingvideourl': 'configure/resources/car/car.png', 'theme': '大表姐', 'valueKey': 'video'}\n\n    @pytest.mark.parametrize(\"test_input\", ParseExcel.get_excel_data(bd, 'base'))\n    @allure.story(\"主题样式\")\n    def test_theme(self, drivers, test_input):\n        \"\"\"主题样式\"\"\"\n        base = SystemBasePage(drivers)\n        base.switch_to_frame()\n        base.click_elements('系统', 0)\n        base.click_base('基本')\n        base.select_option('主题样式', '大表姐')\n        base.click_save()\n        base.refresh()\n        base.switch_to_frame()\n        base.click_elements('系统', 0)\n        base.click_base('基本')\n        assert '大表姐' == base.get_option('主题样式')\n        base.switch_to_default_content()\n        base.click_base('项目列表')\n>       base.click_base('优锘产业园')\n\nTestCase\\test_systembase.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\systembasepage.py:27: in click_base\n    self.is_click(base.get_item(key))\npage\\webpage.py:65: in is_click\n    self.find_element(locator).click()\npage\\webpage.py:43: in find_element\n    return WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), locator)\npage\\webpage.py:39: in element_locator\n    return func(LOCATE_MODE[name], value)\npage\\webpage.py:43: in <lambda>\n    return WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"65555807418bbad2a4205108f32b6122\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000027E63E4C4C8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\ne:\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "drivers",
    "time" : {
      "start" : 1601437847554,
      "stop" : 1601437861559,
      "duration" : 14005
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "主题样式",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <TestCase.test_systembase.TestSystemBase object at 0x0000027E63DBEB88>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"65555807418bbad2a4205108f32b6122\")>\ntest_input = {'expected': '基本', 'loadingvideourl': 'configure/resources/car/car.png', 'theme': '大表姐', 'valueKey': 'video'}\n\n    @pytest.mark.parametrize(\"test_input\", ParseExcel.get_excel_data(bd, 'base'))\n    @allure.story(\"主题样式\")\n    def test_theme(self, drivers, test_input):\n        \"\"\"主题样式\"\"\"\n        base = SystemBasePage(drivers)\n        base.switch_to_frame()\n        base.click_elements('系统', 0)\n        base.click_base('基本')\n        base.select_option('主题样式', '大表姐')\n        base.click_save()\n        base.refresh()\n        base.switch_to_frame()\n        base.click_elements('系统', 0)\n        base.click_base('基本')\n        assert '大表姐' == base.get_option('主题样式')\n        base.switch_to_default_content()\n        base.click_base('项目列表')\n>       base.click_base('优锘产业园')\n\nTestCase\\test_systembase.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\systembasepage.py:27: in click_base\n    self.is_click(base.get_item(key))\npage\\webpage.py:65: in is_click\n    self.find_element(locator).click()\npage\\webpage.py:43: in find_element\n    return WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), locator)\npage\\webpage.py:39: in element_locator\n    return func(LOCATE_MODE[name], value)\npage\\webpage.py:43: in <lambda>\n    return WebPage.element_locator(lambda *args: self.wait.until(EC.presence_of_element_located(args)), locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"65555807418bbad2a4205108f32b6122\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000027E63E4C4C8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\ne:\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ebf19faca38f9203",
      "name" : "测试失败截图...20200930115247",
      "source" : "ebf19faca38f9203.png",
      "type" : "image/png",
      "size" : 33412
    }, {
      "uid" : "5d55ade5dcd469c4",
      "name" : "log",
      "source" : "5d55ade5dcd469c4.txt",
      "type" : "text/plain",
      "size" : 38972
    }, {
      "uid" : "936a4098517e49d1",
      "name" : "stdout",
      "source" : "936a4098517e49d1.txt",
      "type" : "text/plain",
      "size" : 37
    }, {
      "uid" : "385c6afce8bee905",
      "name" : "stderr",
      "source" : "385c6afce8bee905.txt",
      "type" : "text/plain",
      "size" : 771
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "drivers::fn",
    "time" : {
      "start" : 1601437967746,
      "stop" : 1601437969855,
      "duration" : 2109
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "主题样式"
  }, {
    "name" : "feature",
    "value" : "测试系统基本模块"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_systembase"
  }, {
    "name" : "subSuite",
    "value" : "TestSystemBase"
  }, {
    "name" : "host",
    "value" : "UIN-20200609XCG"
  }, {
    "name" : "thread",
    "value" : "3648-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_systembase"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "test_input",
    "value" : "{'theme': '大表姐', 'valueKey': 'video', 'loadingvideourl': 'configure/resources/car/car.png', 'expected': '基本'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "729995bcc6ba083b.json",
  "parameterValues" : [ "{'theme': '大表姐', 'valueKey': 'video', 'loadingvideourl': 'configure/resources/car/car.png', 'expected': '基本'}" ]
}